version: '3'

services:
  portainer:
    restart: always
    image: portainer/portainer:latest
    ports:
      - "9000:9000"
    command: --admin-password '$$2y$$05$$aJ1TVevLH/EyGM7bOLehyOR50USU5rZxEH9pZVPMJI8DGoJGlLSoi' # password is 11111111
    networks:
      atriangle:
        aliases:
          - portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-storage:/data
  blazegraph:
    build: blazegraph/2.1.5/.
    restart: always
    volumes:
      - blazegraph-storage:/usr/local
    networks:
      atriangle:
        aliases:
          - blazegraph
    ports:
      - 8080
  atrianglemongo:
    image: mongo
    restart: always
    volumes:
      - mongodb-storage:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      atriangle:
        aliases:
          - mongo
    ports:
      - 27017
  atrianglemongoexpress:
    image: mongo-express
    restart: always
    ports:
      - 8081
    networks:
      atriangle:
        aliases:
          - mongoexpress
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_SITE_BASEURL: /proxy/mongo/
  atriangleelasticsearch:
    restart: always
    container_name: atriangle_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    networks:
      atriangle:
        aliases:
          - elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms3072m -Xmx4196m"
      - "discovery.type=single-node"
    ports:
      - "9200"
      - "9300"
  atrianglezookeeper:
    restart: always
    image: zookeeper
    ports:
      - "2181"
    networks:
      atriangle:
        aliases:
          - zookeeper
  kafkaserver:
    restart: always
    build: kafka-docker/.
    depends_on:
      - atrianglezookeeper
    ports:
      - "9092"
      - "9093"
    networks:
      atriangle:
        aliases:
          - kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # KAFKA
  atriangleelasticsink:
    restart: always
    depends_on:
      - atriangleelasticsearch
      - kafkaserver
    networks:
      atriangle:
        aliases:
          - elasticsink
    image: atriangle/elastic-sink
    environment:
      ELASTICSEARCH_HOSTNAME: "elasticsearch"
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      FILE_ENDPOINT_URL: "http://restgateway:8088/api/upload"
      APPLICATION_BASE_PATH: "/usr/app/elastic-sink"
    volumes:
      - elastic-sink-storage:/user/app
  atrianglelogsink:
    restart: always
    depends_on:
      - atriangleelasticsearch
      - kafkaserver
    networks:
      atriangle:
        aliases:
          - logsink
    image: atriangle/log-sink
    environment:
      ELASTICSEARCH_HOSTNAME: "elasticsearch"
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      APPLICATION_BASE_PATH: "/usr/app/log-sink"
    volumes:
      - log-sink-storage:/user/app

  atrianglerdfsink:
    restart: always
    depends_on:
      - blazegraph
      - kafkaserver
    networks:
      atriangle:
        aliases:
          - rdfsink
    image: atriangle/rdf-sink
    environment:
      SPARQL_ENDPOINT_URL: "http://blazegraph:8080/bigdata"
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      SHACL_ENDPOINT_URL: "http://restgateway:8088/api/shacl"
      FILE_ENDPOINT_URL: "http://restgateway:8088/api/upload"
      APPLICATION_BASE_PATH: "/usr/app/rdf-sink"
    volumes:
      - rdf-sink-storage:/user/app
  atrianglemongodbsink:
    restart: always
    depends_on:
      - atrianglemongo
      - kafkaserver
    networks:
      atriangle:
        aliases:
          - mongodbsink
    image: atriangle/mongodb-sink
    environment:
      MONGO_DB_HOST: "mongo"
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      FILE_ENDPOINT_URL: "http://restgateway:8088/api/upload"
      APPLICATION_BASE_PATH: "/usr/app/mongodb-sink"

    volumes:
      - mongodb-sink-storage:/user/app
  # WEB
  atriangleuploadrest:
    restart: always
    depends_on:
      - kafkaserver
      - atrianglezookeeper
      - atrianglemongo
    networks:
      atriangle:
        aliases:
          - uploadrest
    image: atriangle/upload-rest
    environment:
      ELASTICSEARCH_HOSTNAME: "elasticsearch"
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      ZOOKEEPER_URL: "zookeeper:2181"
      APPLICATION_BASE_PATH: "/usr/app/fileupload"
      MONGO_DB_HOST: "mongo"
  atriangleprojectrest:
    restart: always
    depends_on:
      - kafkaserver
      - atrianglezookeeper
      - atrianglemongo
    networks:
      atriangle:
        aliases:
          - projectrest
    image: atriangle/project-rest
    environment:
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      ZOOKEEPER_URL: "zookeeper:2181"
      APPLICATION_BASE_PATH: "/usr/app/project"
      MONGO_DB_HOST: "mongo"
    volumes:
      - project-rest-storage:/user/app
  atriangleshaclrest:
    restart: always
    depends_on:
      - kafkaserver
      - atrianglezookeeper
    networks:
      atriangle:
        aliases:
          - shaclrest
    image: atriangle/shacl-rest
    environment:
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      ZOOKEEPER_URL: "zookeeper:2181"
      APPLICATION_BASE_PATH: "/usr/app/shacl"
    volumes:
      - shacl-rest-storage:/user/app
  atriangleelasticrest:
    restart: always
    depends_on:
      - kafkaserver
      - atrianglezookeeper
      - atriangleelasticsearch
    networks:
      atriangle:
        aliases:
          - elasticrest
    image: atriangle/elastic-rest
    environment:
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      ZOOKEEPER_URL: "zookeeper:2181"
      ELASTICSEARCH_HOSTNAME: "elasticsearch"
      APPLICATION_BASE_PATH: "/usr/app/elastic"
    volumes:
      - elastic-rest-storage:/user/app
  atrianglerestgateway:
    restart: always
    depends_on:
      - kafkaserver
      - blazegraph
      - atriangleelasticsearch
    networks:
      atriangle:
        aliases:
          - restgateway
    image: atriangle/restgateway
    ports:
      - "8088:8088"
    environment:
      ELASTICSEARCH_HOSTNAME: "elasticsearch"
      SPARQL_ENDPOINT_PROXY_URL: "http://blazegraph:8080/bigdata"
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      ZOOKEEPER_URL: "zookeeper:2181"
      MONGO_EXPRESS_HOST: "mongoexpress"
      APPLICATION_BASE_PATH: "/usr/app/rest-gateway"
    volumes:
      - rest-storage:/user/app
  atrianglerestxls2rdf:
    restart: always
    depends_on:
      - kafkaserver
    networks:
      atriangle:
        aliases:
          - xls2rdf
    image: atriangle/xls2rdf
    environment:
      KAFKA_BOOTSTRAP_SERVER: "kafka"
      ZOOKEEPER_URL: "zookeeper:2181"
      APPLICATION_BASE_PATH: "/usr/app/xls2rdf"
    volumes:
      - xls2rdf-storage:/user/app

volumes:
  elastic-sink-storage:
  rdf-sink-storage:
  mongodb-sink-storage:
  log-sink-storage:
  rest-storage:
  upload-rest-storage:
  project-rest-storage:
  shacl-rest-storage:
  elastic-rest-storage:
  mongodb-storage:
  blazegraph-storage:
  portainer-storage:
  xls2rdf-storage:

networks:
  atriangle:
